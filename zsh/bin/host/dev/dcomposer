#!/usr/bin/env bash

set -e

image=composer

# Assumes a running project container named `php`
# If one is not found, defaults to running global `composer` in current directory

docker compose run --rm php composer --version &>/dev/null || exit_code=$?

if [[ $exit_code -eq 0 ]]; then
  echo '> Using project container'
  docker compose run --rm \
    -u "$(id -u):$(id -g)" \
    --env COMPOSER_HOME \
    --env COMPOSER_CACHE_DIR \
    -v "$COMPOSER_HOME":"$COMPOSER_HOME" \
    -v "$COMPOSER_CACHE_DIR":"$COMPOSER_CACHE_DIR" \
    php \
    composer \
    "$@"
else
  echo '> Using global container'

  flags=()

  case "$1" in
    create-project)
      flags+=(--no-install)
      ;;
  esac

  docker run -it --rm \
    -u "$(id -u):$(id -g)" \
    --env COMPOSER_HOME \
    --env COMPOSER_CACHE_DIR \
    -v "$COMPOSER_HOME":"$COMPOSER_HOME" \
    -v "$COMPOSER_CACHE_DIR":"$COMPOSER_CACHE_DIR" \
    -v "$PWD":/app \
    $image \
    "$@" \
    "${flags[@]}"
fi
