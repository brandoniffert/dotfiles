# vim:ft=zsh

emulate -L zsh

function p_header() {
  local title="$@"
  local length="${#title}"
  local cols=$(( $(tput cols) - length - 3))

  printf "\n"
  echo -n "[${title[@]}] "
  printf '%.sÂ·' $(seq 1 $cols)
  printf "\n"
}

if command -v npm &> /dev/null; then
  p_header 'npm'
  npm outdated --location=global
  local ret=$?

  if [[ "$ret" -eq 1 ]]; then
    printf "\n"
    read 'response?> Do you want to update? [y|N] '
    if [[ $response =~ (yes|y|Y) ]]; then
      printf "\n"
      npm upgrade --location=global
    fi
    unset response
  else
    echo '* Up to date, skipping...'
  fi
fi

if command -v composer &> /dev/null; then
  p_header 'composer'
  composer global outdated --direct --strict
  local ret=$?

  if [[ "$ret" -eq 1 ]]; then
    printf "\n"
    composer global update --interactive
  fi
fi

if command -v tmux &> /dev/null; then
  p_header 'tmux'

  if [[ -n "$TMUX" ]]; then
    "$XDG_DATA_HOME/tmux/plugins/tpm/scripts/update_plugin.sh" "" all
    "$XDG_DATA_HOME/tmux/plugins/tpm/scripts/source_plugins.sh"
  else
    echo '! Not inside a tmux session, skipping...'
  fi
fi

if command -v antidote &> /dev/null; then
  p_header 'antidote'

  antidote update
fi

printf "\n"

unset p_header
